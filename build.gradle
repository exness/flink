plugins {
    id 'java'
    id 'maven-publish'
    id 'checkstyle'
    id 'org.danilopianini.publish-on-central' version '9.0.7'
}

ext {
    javaVersion = '17'
    flinkVersion = '1.20.0'
    flinkKafkaVersion = '3.3.0-1.20'
    scalaBinaryVersion = '2.12'
    slf4jVersion = '2.0.3'
    log4jVersion = '2.17.1'
    lombokVersion = '1.18.34'
    assertjVersion = '3.23.1'
    junitJupiterVersion = '5.10.1'
    postgresJdbcVersion = '42.7.2'
    verticaJdbcVersion = '12.0.4-0'
    clickhouseJdbcVersion = '0.6.5'
    calciteVersion = '1.37.0'
    apicurioVersion = '2.5.8.Final'
}

allprojects {
    group = 'com.exness'
    version = System.getenv("RELEASE_VERSION") ?: "0.0.1-SNAPSHOT"
        
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    java {
        withSourcesJar()
    }

    repositories {
        maven {
            url "https://packages.confluent.io/maven"
            allowInsecureProtocol true
        }
        maven {
            url 'https://jitpack.io'
        }
        mavenCentral()
    }

    checkstyle {
        configFile = rootProject.file('checkstyle/checkstyle.xml')
        toolVersion = '9.1'
        ignoreFailures = false
    }
}

publishing {
    publications {
        maven(MavenPublication) { publication ->
            groupId = group
            artifactId = project.name
            version = System.getenv("RELEASE_VERSION") ?: "local"

            from components.java
        }
    }
}

publishOnCentral {
    repoOwner.set('exness')
    projectDescription.set('Various tools and improvements for Flink')
    projectLongName.set('Flink Tools')
    licenseName.set('Apache License, Version 2.0')
    licenseUrl.set('http://www.apache.org/licenses/LICENSE-2.0')
    projectUrl.set('https://github.com/exness/flink')
    scmConnection.set('scm:git:https://github.com/exness/flink')
}

signing {
    def signingKey = project.findProperty('signingKey')
    def signingPassword = project.findProperty('signingPassword')
    useInMemoryPgpKeys(signingKey, signingPassword)
}